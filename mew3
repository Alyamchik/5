import RPi.GPIO as GPIO
import time

GPIO.setmode(GPIO.BCM)

dac = [26, 19, 13, 6, 5, 11, 9, 10]
Guess = [1, 0, 0, 0, 0, 0, 0, 0]
leds = [21, 20, 16, 12, 7, 8, 25, 24]
comp = 4
troyka = 17
MaxVoltage = 3.3
Bits = 8
Levels = 2**Bits
voltage = 0

GPIO.setup(dac, GPIO.OUT)
GPIO.setup(leds, GPIO.OUT)
GPIO.setup(troyka, GPIO.OUT, initial = 1)
GPIO.setup(comp, GPIO.IN)

def decimal2binary(value):
    return [int(bit) for bit in bin(value)[2:].zfill(8)]

def adc():
    Guess = [0, 0, 0, 0, 0, 0, 0, 0]
    for counter in range (Bits):
        Guess[counter] = 1
        GPIO.output(dac, Guess)
        time.sleep(0.001)
        comparatorValue = GPIO.input(comp)
        if comparatorValue == 0:
            Guess[counter] = 0
        else:
            Guess[counter] = 1
    return Guess[0] * 128 + Guess[1] * 64 + Guess[2] * 32 + Guess[3] * 16 + Guess[4] * 8 + Guess[5] * 4 + Guess[6] * 2 + Guess[7]

try:
    while True:
        voltage = adc()
        print("voltage is {:.2f}, decimal is {}".format(voltage * MaxVoltage / Levels, voltage))
        number = round(Bits/Levels * voltage)
        print(number)
        GPIO.output(leds, decimal2binary(2**number-1))
        time.sleep(0.1)
except KeyboardInterrupt:
    print('\nСтоп')
finally:
    GPIO.output(dac, 0)
    GPIO.output(troyka, 0)
    GPIO.cleanup()
